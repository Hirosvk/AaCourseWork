c
square_arr.sort == (1..9).to_a
square_arr
exit
column.sort == (1..9).to_a
c
row.map{|tile| tile.num}.sort == (1..9).to_a
column
c
row.map{|tile| tile.num}.sort == (1..9).to_a
row_solved?(row)
row
c
rt_corner[1]
rt_corner[0]
c
@grid[0,8c
pos
@grid[*pos]
@grid[*pos].class
c
n
self[*pos].num > 0
self[*pos].num
c
n
step
numbers.length
p numbers
c
self[0, 0]
self[i, j]
n
p j
p i
step
p i
i
step
shuffled
quit
@known_cards
c
@revealed_card_pos
@revealed_card_value
n
c
n
letters
n
step
n
@revealed_card_value
step
@known_cards
c
@revealed_card_pos
@revealed_card_position
pos
n
pos
step
n
@known_cards
c
quit
c
@known_cards
pos
n
@known_cards
@revealed_card_value
step
n
@known_cards
first_guess?
c
known_pair?
n
@revealed_card_value
step
@known_cards
exit
p @known_cards
